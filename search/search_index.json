{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"Welcome to NanoLab - FCFM \ud83d\udd2c\u2728","text":"<p>Welcome to NanoLab, a cutting-edge research lab focused on optoelectronics, nanomaterials, and advanced photodetector technologies. Our team is dedicated to pushing the boundaries of solid-state physics, quantum devices, and nanotechnology.</p> <p>\ud83d\ude80 Our Mission At NanoLab, we strive to develop next-generation electronic devices, exploring materials like graphene, transition metal dichalcogenides (TMDs), and novel semiconductors.</p>"},{"location":"index.html#about-us","title":"\ud83c\udfdb About Us","text":"<ul> <li>\ud83d\udccd Based at the Facultad de Ciencias F\u00edsicas y Matem\u00e1ticas de la Universidad de Chile.</li> <li>\ud83d\udd2c Specializing in photodetectors, sensors, and nano-fabrication.</li> <li>\ud83e\udd1d Collaborating with leading academic and industrial partners.</li> </ul>"},{"location":"index.html#latest-news","title":"\ud83d\udcf0 Latest News","text":"<p>Read our latest blog post</p> <p>\u27a1\ufe0f See all news </p>"},{"location":"index.html#research-areas","title":"\ud83d\udd2c Research Areas","text":"<p>We explore multiple fields of optoelectronics and nanomaterials, including: - Graphene-based devices - Quantum transport - Flexible electronics - Photodetector engineering</p>"},{"location":"index.html#publications","title":"\ud83d\udcc4 Publications","text":"<p>\ud83d\udcd6 Our research is published in top scientific journals. Check out our latest publications.</p>"},{"location":"index.html#meet-the-team","title":"\ud83d\udc68\u200d\ud83d\udd2c Meet the Team","text":"<p>\ud83d\udc65 Our researchers and collaborators are at the forefront of nanoscience innovation.</p>"},{"location":"people.html","title":"\ud83c\udfdb Our Team","text":"<p>Welcome to our lab! We are a passionate team of researchers dedicated to molecular electronics, optoelectronics and nanomaterials. Our mission is to push the boundaries of science and develop cutting-edge solutions for next-generation devices.</p>"},{"location":"people.html#principal-investigator","title":"\ud83d\udc69\ud83c\udffc\u200d\ud83d\udd2c Principal Investigator","text":""},{"location":"people.html#dr-diana-dulic","title":"Dr. Diana Duli\u0107","text":"<p>\ud83c\udfdb Affiliation: Universidad de Chile \ud83d\udce7 Email: diana.dulic@gmail.com \ud83c\udf10 Google Scholar: Diana Duli\u0107 </p>"},{"location":"people.html#msc-students","title":"\ud83d\udd2c MSc. Students","text":""},{"location":"people.html#guillermo-aburto-contreras","title":"Guillermo Aburto Contreras","text":"<p>\ud83c\udfdb Affiliation: Universidad de Chile \ud83d\udce7 Email: guillermo.aburto@ug.uchile.cl \ud83c\udf10 Google Scholar: Guillermo Aburto </p>"},{"location":"people.html#diego-sanz-biava","title":"Diego Sanz Biava","text":"<p>\ud83c\udfdb Affiliation: Universidad de Chile \ud83d\udce7 Email: diego.sanz@ug.uchile.cl \ud83c\udf10 Google Scholar: Diego Sanz </p>"},{"location":"people.html#joaquin-lopez","title":"Joaqu\u00edn L\u00f3pez","text":"<p>\ud83c\udfdb Affiliation: Universidad de Chile \ud83d\udce7 Email: joaquin.mph7@gmail.com  \ud83c\udf10 Google Scholar: Joaqu\u00edn L\u00f3pez </p>"},{"location":"people.html#labs-engineer","title":"\u26a1 Lab's Engineer","text":""},{"location":"people.html#tomas-rojas-castiglione","title":"Tom\u00e1s Rojas Castiglione","text":"<p>\ud83c\udfdb Affiliation: Universidad de Chile \ud83d\udce7 Email: tomas.rojas.c@ug.uchile.cl \ud83c\udf10 Google Scholar: Tom\u00e1s Rojas </p>"},{"location":"people.html#labs-software-engineer","title":"\ud83d\udcbb Lab's Software Engineer","text":""},{"location":"people.html#benjamin-briceno-elchiver","title":"Benjam\u00edn Brice\u00f1o Elchiver","text":"<p>\ud83c\udfdb Affiliation: Universit\u00e4t Augsburg, Institute for Physics, Germany \ud83d\udce7 Email: benjaminbriceno@ug.uchile.cl \ud83c\udf10 Google Scholar: Benjam\u00edn Brice\u00f1o </p>"},{"location":"people.html#alumni","title":"\ud83c\udf93 Alumni","text":"<ul> <li> <p>Dr. Alfredo Rates \u2013 \ud83d\udd17 LinkedIn </p> </li> <li> <p>Dr. Jacqueline Labra Mu\u00f1oz - \ud83d\udd17 LinkedIn </p> </li> <li> <p>Eng. Tom\u00e1s Rojas Castiglione - \ud83d\udd17 LinkedIn </p> </li> </ul>"},{"location":"people.html#want-to-join-us","title":"\ud83c\udfaf Want to Join Us?","text":"<p>Our lab welcomes motivated students and researchers! If you're interested in optoelectronics, nanomaterials, or device engineering, feel free to reach out. \ud83d\ude80  </p> <p>\ud83d\udce9 Contact: diana.dulic@gmail.com  \ud83d\udccd Location: Avenida Blanco Encalada 2008, Santiago, Chile</p>"},{"location":"publications.html","title":"\ud83d\udcda Publications","text":"<p>Welcome to the compilation of NanoLab's research!</p>"},{"location":"publications.html#selected-publications","title":"\ud83d\udcda Selected Publications","text":"<ol> <li>Air-stable, aluminium oxide encapsulated graphene phototransistors Authors: Tom\u00e1s Rojas Castiglione, Thomas Pucher, Kaj Dockx, Guillermo Aburto Contreras, Diego Sanz Biava, Benjam\u00edn Brice\u00f1o Elchiver, Michele Buscema, Andres Castellanos-Gomez, Herre van der Zant, Diana Duli\u0107.  Journal: Nanotechnology Publication Date: 2024 DOI: 10.1088/1361-6528/ad9df0 </li> <li>Single-molecule transport of fullerene-based curcuminoids Authors: Diana Dulic, Alfredo Rates, Edison Castro, Jacqueline Labra-Munoz, Daniel Aravena, Alvaro Etcheverry-Berrios, Daniel Riba-Lopez, Eliseo Ruiz, Nuria Aliaga-Alcalde, Monica Soler, Luis Echegoyen, Herre SJ Van Der Zant. Journal: The Journal of Physical Chemistry C (American Chemical Society) Publication Date: 2019 DOI: 10.1021/acs.jpcc.9b10166 </li> <li>Trapping and electrical characterization of single core/shell iron-based nanoparticles in self-aligned nanogaps Authors: Jacqueline Labra-Mu\u00f1oz, Zorica Konstantinovi\u0107, Lluis Balcells, Alberto Pomar, Herre SJ Van der Zant, Diana Duli\u0107. Journal: Applied Physics Letters Publication Date: 2019 DOI: 10.1063/1.5094352 </li> </ol> <p>For a comprehensive and up-to-date list of Dr. Duli\u0107's publications, please visit her Google Scholar profile or ResearchGate profile.</p>"},{"location":"blog/index.html","title":"What we've been up to","text":"<p>Here you will see posts about what we do at the lab </p>"},{"location":"blog/2024/11/01/nanolab--slafes.html","title":"NanoLab @ SLAFES!","text":"<p>We went to the \"XXV Simposio Latinoamericano de F\u00edsica de Estado S\u00f3lido\" - SLAFES and we presented three posters!</p> Here we were at La Cueva, Barranquilla <p>We went to the XXV SLAFES and we presented 3 posters!</p>  Download Poster  Download Poster  Download Poster Our team presenting at SLAFES!"},{"location":"documentation/index.html","title":"\ud83c\udfdb NanoLab Documentation","text":"<p>Welcome to the NanoLab Documentation Hub! This section provides a comprehensive guide to our hardware, software, and research protocols, ensuring transparency, reproducibility, and accessibility in our work.</p>"},{"location":"documentation/index.html#what-youll-find-here","title":"\ud83d\udcd6 What You\u2019ll Find Here","text":"<p>\ud83d\udd2c Hardware Documentation \u2013 Details on our experimental setups, equipment, and fabrication processes. \ud83d\udcbb Software Guides \u2013 Tools, scripts, and custom-built software for data analysis, device simulations, and experiment automation. \ud83d\udcdd Protocols &amp; Methods \u2013 Step-by-step descriptions of our lab techniques, safety guidelines, and best practices.  </p>"},{"location":"documentation/index.html#open-science-our-commitment","title":"\ud83c\udf0d Open Science &amp; Our Commitment","text":"<p>At NanoLab, we believe in the power of open science. By sharing our methodologies, designs, and code, we contribute to a collaborative research environment where innovation thrives.</p> <p>\ud83d\udca1 Need help or want to contribute? Reach out to us or submit improvements via GitHub! \ud83d\ude80</p>"},{"location":"documentation/hardware/clicker_repo/index.html","title":"ESP8266 Temperature Controller","text":"<p>This project allows controlling an ESP8266-based device through serial communication. The system simulates button presses to adjust temperature settings on an external device.</p>"},{"location":"documentation/hardware/clicker_repo/index.html#features","title":"\ud83d\udce6 Features","text":"<ul> <li>Set Current Temperature (<code>SCTxxx</code>)</li> <li>Set Target Temperature (<code>STTxxx</code>)</li> <li>Start Temperature Adjustment (<code>GO</code>)</li> <li>Query Current Temperature (<code>RCT</code>)</li> <li>Query Target Temperature (<code>RTT</code>)</li> <li>Manual Button Press Commands (<code>A</code>, <code>AA</code>, <code>B</code>, <code>BB</code>, <code>AB</code>)</li> </ul>"},{"location":"documentation/hardware/clicker_repo/index.html#requirements","title":"\ud83d\udd27 Requirements","text":"<ul> <li>ESP8266 microcontroller</li> <li>USB-to-Serial Converter (e.g., FTDI, CH340G)</li> <li>Serial Terminal Software (Minicom, Screen, Picocom, or Python <code>pyserial</code>)</li> </ul>"},{"location":"documentation/hardware/clicker_repo/index.html#commands-usage","title":"\ud83d\ude80 Commands &amp; Usage","text":""},{"location":"documentation/hardware/clicker_repo/index.html#temperature-commands","title":"Temperature Commands","text":"Command Description <code>SCTxxx</code> Set current temperature to <code>xxx</code> \u00b0C. Example: <code>SCT30</code> (sets to 30\u00b0C) <code>STTxxx</code> Set target temperature to <code>xxx</code> \u00b0C. Example: <code>STT100</code> (target = 100\u00b0C) <code>RCT</code> Request current temperature <code>RTT</code> Request target temperature <code>GO</code> Start adjusting temperature from <code>CT</code> to <code>TT</code>"},{"location":"documentation/hardware/clicker_repo/index.html#manual-button-presses","title":"Manual Button Presses","text":"Command Action <code>A</code> Short press button A (100 ms) <code>AA</code> Long press button A (500 ms) <code>B</code> Short press button B (100 ms) <code>BB</code> Long press button B (500 ms) <code>AB</code> Short press both A and B simultaneously"},{"location":"documentation/hardware/clicker_repo/index.html#troubleshooting","title":"\ud83d\udd27 Troubleshooting","text":""},{"location":"documentation/hardware/clicker_repo/index.html#permission-denied-linux","title":"Permission Denied (Linux)","text":"<p>If you get <code>permission denied</code> on <code>/dev/ttyUSB0</code>, run:</p> <pre><code>sudo usermod -aG dialout $USER\n</code></pre> <p>Then restart the terminal.</p>"},{"location":"documentation/hardware/clicker_repo/index.html#example-usage","title":"\ud83d\udccc Example Usage","text":"<pre><code>SCT25   # Set current temperature to 25\u00b0C\nSTT80   # Set target temperature to 80\u00b0C\nRCT     # Get current temperature\nRTT     # Get target temperature\nGO      # Start automatic temperature adjustment\n</code></pre>"},{"location":"documentation/hardware/temp_sensor_v1_repo/index.html","title":"ESP8266 Temperature Sensor","text":"<p>This project reads temperature data from a MAX31865 RTD sensor (PT100) and a Dallas Temperature Sensor (DS18B20) using an ESP8266. The data is transmitted over Serial communication upon request.</p>"},{"location":"documentation/hardware/temp_sensor_v1_repo/index.html#features","title":"\ud83d\udce6 Features","text":"<ul> <li>Read PT100 temperature via MAX31865.</li> <li>Read DS18B20 temperature using OneWire.</li> <li>Serial communication for data requests.</li> <li>Device identification response.</li> </ul>"},{"location":"documentation/hardware/temp_sensor_v1_repo/index.html#requirements","title":"\ud83d\udd27 Requirements","text":"<ul> <li>ESP8266 microcontroller.</li> <li>MAX31865 RTD module.</li> <li>PT100 RTD sensor.</li> <li>DS18B20 temperature sensor.</li> <li>USB-to-Serial Converter (e.g., FTDI, CH340G).</li> <li>Arduino IDE with necessary libraries:</li> <li><code>Adafruit MAX31865</code></li> <li><code>DallasTemperature</code></li> <li><code>OneWire</code></li> </ul>"},{"location":"documentation/hardware/temp_sensor_v1_repo/index.html#commands-usage","title":"\ud83d\ude80 Commands &amp; Usage","text":""},{"location":"documentation/hardware/temp_sensor_v1_repo/index.html#temperature-commands","title":"Temperature Commands","text":"Command Description <code>R</code> Request timestamped temperatures from both sensors. <code>*IDN?</code> Request device identification."},{"location":"documentation/hardware/temp_sensor_v1_repo/index.html#wiring","title":"\ud83d\udd27 Wiring","text":"ESP8266 Pin MAX31865 DS18B20 GPIO15 (D2) CS - MISO MISO - MOSI MOSI - SCK SCK - 3.3V VIN VCC GND GND GND GPIO2 (D4) - DATA <p>Note: A 4.7k\u03a9 pull-up resistor is required between VCC and DATA for DS18B20.</p>"},{"location":"documentation/hardware/temp_sensor_v1_repo/index.html#example-usage","title":"\ud83d\udccc Example Usage","text":"<pre><code>R       # Request temperatures\n*IDN?   # Get device identification\n</code></pre>"},{"location":"documentation/hardware/temp_sensor_v1_repo/index.html#troubleshooting","title":"\ud83d\udd27 Troubleshooting","text":""},{"location":"documentation/hardware/temp_sensor_v1_repo/index.html#permission-denied-linux","title":"Permission Denied (Linux)","text":"<p>If you get <code>permission denied</code> on <code>/dev/ttyUSB0</code>, run:</p> <pre><code>sudo usermod -aG dialout $USER\n</code></pre> <p>Then restart the terminal.</p>"},{"location":"documentation/hardware/temp_sensor_v1_repo/index.html#future-improvements","title":"\ud83d\udccc Future Improvements","text":"<ul> <li>Implement error handling for sensor failures.</li> <li>Add Wi-Fi support for remote data logging.</li> <li>Integrate with cloud platforms for real-time monitoring.</li> </ul>"},{"location":"documentation/hardware/temp_sensor_v1_repo/index.html#license","title":"\ud83d\udcdc License","text":"<p>This project is open-source under the MIT License.</p> <p>Author: ROSATECH</p>"},{"location":"documentation/software/laser_setup_repo/index.html","title":"Laser Setup","text":"<p>Experimental setup for Laser, I-V and Transfer Curve measurements.</p>"},{"location":"documentation/software/laser_setup_repo/index.html#usage","title":"Usage","text":"<p>This project allows for the communication between the computer and the instruments used in the experimental setup, as well as the control of the instruments. So far, the following instruments are supported: - Keithley 2450 SourceMeter (Reference Manual) (Requires NI-VISA installed) - Keithley 6517B Electrometer (Reference Manual (Also requires NI-VISA)) - TENMA Power Supply - Thorlabs PM100D Power Meter (Reference Manual) - Bentham TLS120Xe Light Source (Reference Manual)</p> <p>As well as all instruments available in the PyMeasure library.</p> <p>The main window of the program can be run by executing either of the following commands:</p> <pre><code>laser_setup\n</code></pre> <pre><code>python .\n</code></pre> <p>The main window will display all available procedures, and will allow you to run them.</p>"},{"location":"documentation/software/laser_setup_repo/index.html#installation","title":"Installation","text":"<p>This project mainly uses PyMeasure, although other packages such as NumPy and PyQT6 are used. To install this project, first clone the repository:</p> <pre><code>git clone https://github.com/nanolab-fcfm/laser_setup.git\n</code></pre> <p>Then, create a virtual environment and activate it:</p> <pre><code>python -m venv &lt;venv_name&gt;\nsource &lt;venv_name&gt;/bin/activate\n</code></pre> <p>In Windows, use the following command to activate the virtual environment instead:</p> <pre><code>&lt;venv_name&gt;/scripts/activate\n</code></pre> <p>Finally, upgrade pip and install this package and its required:</p> <pre><code>python -m pip install --upgrade pip\npip install .\n</code></pre> <p>Alternatively, you can install the package directly from the repository:</p> <pre><code>pip install git+https://github.com/nanolab-fcfm/laser_setup.git\n</code></pre> <p>This will create an entry point for the program, which can be run by executing:</p> <pre><code>laser_setup\n</code></pre>"},{"location":"documentation/software/laser_setup_repo/index.html#configuration","title":"Configuration","text":"<p>The configuration file <code>default_config.ini</code> contains the configuration for the instruments used in the setup. This file is used to set up the instruments and their respective addresses, as well as the default parameters for the procedures. The configuration file is divided into sections, each corresponding to a different instrument. This file, however, should not be edited directly. Any changes to the configuration should be done by first running the <code>setup_adapters</code> script, which will create a new configuration file <code>config/config.ini</code>. This file will be loaded after the default configuration, and will override any parameters set before.</p>"},{"location":"documentation/software/laser_setup_repo/index.html#scripts","title":"Scripts","text":"<p>If you prefer it, you can run the scripts directly from the command line. To start using a specific script, you should first set up the adapters needed to run a measurement. This is done by running</p> <pre><code>laser_setup setup_adapters\n</code></pre> <p>This interactive script will check all connected devices in your computer, and guide you to correctly setup every device in your configuration. A new config file will be created; <code>config/config.ini</code>. To add more instruments, simply add their name to the <code>Adapters</code> section of the new config file and run <code>setup_adapters.py</code>.</p> <p>If you want to run a measurement that uses a TENMA controlled laser, you should first run the following script to calibrate the laser's power:</p> <pre><code>laser_setup calibrate_laser\n</code></pre> <p>Each Script corresponds to a different procedure, and can be run independently. To run a script, use the following command:</p> <pre><code>laser_setup &lt;script_name&gt;\n</code></pre> <p>If you cloned the repository, you can also run the scripts directly from the <code>Scripts</code> folder:</p> <pre><code>python -m Scripts.&lt;script_name&gt;\n</code></pre> <p>Additionally, there are two scripts to quickly analyze data.</p> <p>If you want to find the Dirac Point of an IVg file:</p> <pre><code>laser_setup find_dp_script\n</code></pre> <p>To calculate the desired powers of a LED calibration file you can use the following command, specifying the powers in uW (separated by a space):</p> <pre><code>python -m Scripts.find_calibration_voltage &lt;desired powers&gt;\n</code></pre>"},{"location":"documentation/software/laser_setup_repo/index.html#procedures","title":"Procedures","text":"<p>A list of all available Procedures and their parameters. To maximize functionality, all user-written procedures should be subclasses of <code>BaseProcedure</code>, which is a subclass of <code>Procedure</code> from PyMeasure. Procedures inherit the following from their parent class: - Parameters (<code>pymeasure.experiment.Parameter</code> type) - INPUTS (Inputs to display in the GUI) - DATA_COLUMNS (Columns to display in the GUI and save to file) - <code>startup</code>, <code>execute</code> and <code>shutdown</code> methods</p>"},{"location":"documentation/software/laser_setup_repo/index.html#procedure-sequence","title":"Procedure Sequence","text":"<p>A series of procedures can be run in sequence for a single chip by using the <code>MetaProcedure</code> class. This class allows for the execution of a series of procedures, and the saving of the data to the respective files. The <code>MetaProcedure</code> class is a subclass of <code>BaseProcedure</code>.</p> <p>To run a sequence of procedures, create a new class that inherits from <code>MetaProcedure</code>, and define the <code>procedures</code> attribute as a list of procedures to run. The <code>procedures</code> attribute should be a list of <code>BaseProcedure</code> subclasses, uninitialized. The parameters of each procedure are then set by running the <code>display_window</code> function.</p>"},{"location":"documentation/software/laser_setup_repo/index.html#testing","title":"Testing","text":"<p>This project uses PyTest for testing. To run the tests, use the following command:</p> <pre><code>python -m pytest\n</code></pre> <p>Tests are stored in the <code>tests</code> folder, and are named <code>test_&lt;module_test&gt;.py</code>. You can add more tests by creating a new file in the <code>tests</code> folder, and naming it <code>test_&lt;any&gt;.py</code>. You can also check each test individually by running</p> <pre><code>python -m tests.&lt;test_name&gt;\n</code></pre>"},{"location":"documentation/software/laser_setup_repo/docs/Short%20protocol.html","title":"Short protocol","text":""},{"location":"documentation/software/laser_setup_repo/docs/Short%20protocol.html#for-each-wavelength","title":"For each wavelength:","text":"<ol> <li>IVg Off all the chip </li> <li>Calibration, find led voltage for 2.5, 5.0, 7.5 and 10.0 $\\mu W$</li> <li>IVg On after 1 min On, 7.5 $\\mu W$</li> <li>10 minutes wait since LED Off</li> <li>IVg Off, find DP </li> <li>It + DP, Sequence Power<pre><code>for gate in [4, 15]:\n    for power in Powers:\n        It DP + gate\n</code></pre> <ol> <li>Vg Off, find DP</li> <li> <p>It - DP, Sequence gate -&gt; Sequence Power</p> <p>for gate in [-4, -15]:     for power in Powers:         It DP + gate 8. IVg Off all the chip  </p> </li> </ol> </li> </ol>"},{"location":"documentation/software/laser_setup_repo/docs/led_calibration.html","title":"Led calibration","text":""},{"location":"documentation/software/laser_setup_repo/docs/led_calibration.html#protocolo-de-calibracion-de-potencia-leds","title":"Protocolo de calibraci\u00f3n de potencia LEDs","text":""},{"location":"documentation/software/laser_setup_repo/docs/led_calibration.html#actualizado-al-27-07-2023","title":"Actualizado al 27-07-2023","text":"<ol> <li>Conectar el powermeter (equipo rojo de thorlabs).</li> <li> <p>Encontrar el adaptador del powermeter.</p> <ul> <li>Correr el siguiente c\u00f3digo: ``` import pyvisa</li> </ul> <p>rm = pyvisa.ResourceManager() print(rm.list_resources()) <code>`` + Ver en _config.ini_ que el adaptador de power_meter sea el correcto. 3. Ubicar el sensor del powermeter debajo del lente, asegurandose que toda la luz del LED quede dentro del circulo interno del sensor. 4. Para cada longitud que se quiera calibrar hacer: + Seleccionar longitud en el powermeter apretando el bot\u00f3n $\\lambda$ y seleccionando con OK. + Correr el programa de calibraci\u00f3n</code>python -m Scripts.calibrate_laser`</p> </li> </ol>"},{"location":"documentation/software/laser_setup_repo/docs/led_calibration.html#observaciones","title":"Observaciones","text":"<ul> <li>Asegurarse que haya poca luz, bajar luz de las pantalles de pcs, no encender celulares, ver que la cortina est\u00e9 bien cerrada.</li> <li>El sensor hay que ubicarlo a la misma distancia en que se ubican las muestras para que la calibraci\u00f3n sea correcta.</li> <li>Es normal que las curvas queden planas para voltajes menores a 0.1 [V], pues es el umbral en que se prenden los LEDs.</li> </ul>"},{"location":"documentation/software/laser_setup_repo/docs/led_protocol.html","title":"Led protocol","text":""},{"location":"documentation/software/laser_setup_repo/docs/led_protocol.html#protocolo-de-mediciones-con-led","title":"Protocolo de mediciones con LED","text":""},{"location":"documentation/software/laser_setup_repo/docs/led_protocol.html#actualizado-al-14-08-2023","title":"Actualizado al 14-08-2023","text":"<p>Deltas respecto al DP: -30, -15, -2, +2 [V] </p> <p>-30 y -15 es solo para comparar contra muestra sin ALD</p>"},{"location":"documentation/software/laser_setup_repo/docs/led_protocol.html#importante-para-los-chips-miguel-8-y-9-antes-y-despues-de-medir-con-luz-se-debe-medir-todo-el-chip","title":"Importante: Para los chips Miguel 8 y 9. Antes y desp\u00faes de medir con Luz se debe medir todo el chip.","text":"<ol> <li>Tener LEDs calibrados para obtener voltajes para una potencia dada.</li> <li>IVg apagado.</li> <li>Prender LED por 5 minutos.</li> <li>IVg prendido.</li> <li>IVg apagado de inmediato.</li> <li>Esperar 30 minutos.</li> <li>IVg apagado y encontrar DP.<ul> <li>En caso de haber dos DP, usar el promedio.</li> </ul> </li> <li>It para Vg = DP + Delta elegido.</li> <li>IVg apagado.</li> <li>Esperar 30 minutos.</li> <li>IVg apagado</li> </ol> <ol> <li>Have LEDs calibrated to obtain voltages for a given power.</li> <li>IVg LED OFF.</li> <li>Turn on the LED for 5 minutes.</li> <li>IVg LED ON.</li> <li>IVg LED off immediately.</li> <li>Wait 30 minutes.</li> <li>IVg LED off and find DP.<ul> <li>If there are two DPs, use the average.</li> </ul> </li> <li>It for Vg = DP + Delta chosen.</li> <li>IVg LED OFF.</li> <li>Wait 30 minutes.</li> <li>IVg LED OFF</li> </ol>"},{"location":"documentation/software/laser_setup_repo/docs/led_protocol.html#observaciones","title":"Observaciones:","text":"<ul> <li>Luego de correr <code>setup_adapters</code> cerciorarse con el primer IVg que las tenmas est\u00e9n bien configuradas.</li> <li>Se recomienda no prender el LED hasta despu\u00e9s del primer IVg apagado, ajustando el foco y posici\u00f3n con 0.1 [V] en la tenma_laser s\u00f3lo antes del paso 2. Sacar una foto de esto para calcular la potencia efectiva. </li> </ul>"},{"location":"blog/archive/2024.html","title":"2024","text":""}]}